// Get Maze Paths

import java.io.*;
import java.util.*;
public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        ArrayList < String > paths = getMazePaths(1, 1, n, m);
        System.out.println(paths);
    }
    // sr - source row
    // sc - source column
    // dr - destination row
    // dc - destination column
    public static ArrayList < String > getMazePaths(int sr, int sc, int dr, int dc) {
        // Write your code here
        // Base Condition
        if (sr == dr && sc == dc) {
            ArrayList < String > bres = new ArrayList < > ();
            bres.add("");
            return bres;
        }
        ArrayList < String > horizontalPaths = new ArrayList < > ();
        ArrayList < String > verticalPaths = new ArrayList < > ();
        if (sc < dc) {
            horizontalPaths = getMazePaths(sr, sc + 1, dr, dc);
        }
        if (sr < dr) {
            verticalPaths = getMazePaths(sr + 1, sc, dr, dc);
        }
        ArrayList < String > paths = new ArrayList < > ();
        for (int i = 0; i < horizontalPaths.size(); i++) {
            paths.add("h" + horizontalPaths.get(i));
        }
        for (int i = 0; i < verticalPaths.size(); i++) {
            paths.add("v" + verticalPaths.get(i));
        }
        return paths;
    }
}
